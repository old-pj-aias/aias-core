use crate::crypto::{RSAPubKey, DistributedRSAPrivKey};
use crate::judge;
use crate::signer::{Signer};
use crate::sender;
use crate::verifyer;

use crate::utils;
use crate::crypto;

use fair_blind_signature::{EJPubKey, FBSParameters, FBSSender, BlindedDigest, BlindSignature, Subset, FBSSigner, CheckParameter, Signature };
use std::cell::{RefCell, RefMut}; 
use distributed_rsa::PlainShareSet;

use rand::rngs::OsRng;
use rsa::{BigUint, PublicKey, RSAPrivateKey, RSAPublicKey, PaddingScheme, PublicKeyParts};



#[test]
fn test_all() {
    let pk1 = r#"-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxXo2zWkciUEZBcm/Exk8
Zac8NWskP59EAVFlO218xIXOV0FfphPB/tnbQh7GDXddo7XVEptHdHXyJlXXLihb
9vXbUZF2NDFLOhgDv7pa72VNLbw+jKR/FlsDtwv/bv7ZDqq+n79uavuJ8giX3qCf
+mtBmro7hG5AVve3JImhvA0FvTKJ0xCYUYw02st08He5RwFAXQK8G2cwahp+5ECH
MDdfFUaoxMfRN/+Hl9iqiJovKUJQ3545N2fDYdd0eqSlqL1N5xJxYX1GDMtGZgME
hHR6ntdfm7r43HDB4hk/MJIsNay6+K9tJBiz1qXG40G4NjMKzVrX9pi1Bv8G2RnP
/wIDAQAB
-----END PUBLIC KEY-----"#;

    let sk1 = r#"-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxXo2zWkciUEZBcm/Exk8Zac8NWskP59EAVFlO218xIXOV0Ff
phPB/tnbQh7GDXddo7XVEptHdHXyJlXXLihb9vXbUZF2NDFLOhgDv7pa72VNLbw+
jKR/FlsDtwv/bv7ZDqq+n79uavuJ8giX3qCf+mtBmro7hG5AVve3JImhvA0FvTKJ
0xCYUYw02st08He5RwFAXQK8G2cwahp+5ECHMDdfFUaoxMfRN/+Hl9iqiJovKUJQ
3545N2fDYdd0eqSlqL1N5xJxYX1GDMtGZgMEhHR6ntdfm7r43HDB4hk/MJIsNay6
+K9tJBiz1qXG40G4NjMKzVrX9pi1Bv8G2RnP/wIDAQABAoIBAC3nRMnmvw1gpnJj
/Rhxa0qt3x8Dsr9fRC2SQBfaUYBVIivCNHukaBnXhlIOWTdUId4mLEtQ8QEvUYR7
u7MtCoOTjtGdIH7tXnE4l9Z/eRfg0lnpQhjrO+d0bJ6mGVAxyT7RjdIQa5hOtDgg
qzzC1a0eNXfEBoW4IxiUKGxD2eaeL2NEuwdysO8MrxvbpPLrK4KaQwansh5EdrvL
QmWtSSuB2rYVwWbp7Rs+NuKS4w7CRm9Zp6kN6yjBum+x2o3Wdj33Ww0HayeaRZ1i
nmVTyphfajKuDLYUavCo4tBE67LK/VHesxeFNM+6PjONUVmcRnT1eoATeLVE4vOO
M9kFUQECgYEA9WD+s2HpETsXxyWPp2wv1G8b2kZq0h85Vb971PwgRciHkBccHFHR
0Hgc/hFTHg86V0iVBbcsWtTNTsNbH7aXGNvWJVQiMPDNdKmavgAl3tpGRP7iffLF
503he0GQmVaDEBH4LqCi4Ix0u7wnOND9ie8hMzxtC+2cZyLY8y13o78CgYEAzgZu
JPMgD2BvSKDJYlP7j4OKj0+mQIdpW+ONuLZsbtTDs5GiggTeeeyQDvlESUMSypMj
rmS/GUHAnYft27YWjk48vlzrvrnLyzWLalGYLsUigQIf2BRJG43j8iXuuBKciOrf
P8dkByYXatkiA57CJXOJGJLPvMOfkr+p3i2L48ECgYA9eY52HIqKoZZkczmZRVZ6
T1fYCJpMiDwSCoYYpw3izcmAxPlq8uiw5NbGpEqBlmkUYv/KzchT/UpueC0FNfaG
6NSux3RFdJ7UooU9IsZaHa9LK9xMl50TRQS/n359nBn71bSq4d3MigPY4NumtV0/
yGQ19OaQ/XeYszdNPU/i+wKBgQCXSbeGIJaRVBJD9fYL43nd+A0+kZGW3xjqJh5C
3oqflFOlQDNiYKryQ1nB9R9E4SEiaowQGuENbfBAfbmX1o2XsDIA5AElTBAvx8D5
sLMc3RwqOeIibTsGJdqWTW6P8vLJxBduIT/90+XsS0gj+me80quAxQYRKmG6hE37
3dxUwQKBgQC2onc1n35vGlZ2HxWdnPOUyRnA8HNVXcskprR07ZqFQu36LxI8hHvz
O+zc6JPZDWBppJDWot9d5HeNEjDBMcSqcpeXXYU8XvxA+uECLPctLgNMWxyKFx95
0sVQIY0n9eLL7sg5aCUpGKf4Qc88wF8OPYnBzjCeiJusjkGhQ5rqdQ==
-----END RSA PRIVATE KEY-----"#;

    let judge_pubkey = pk1.to_string();
    let judge_privkey = judge::divide_keys(sk1.to_string(), judge_pubkey.clone());

    let signer_pubkey = pk1.to_string();
    let signer_privkey = sk1.to_string();

    let message = "hoge".to_string();
    let id = 10;

    sender::new(signer_pubkey.clone(), judge_pubkey.clone(), 10);

    let mut signer = Signer::new(signer_privkey.clone(), signer_pubkey.clone(), judge_pubkey.clone(), id);

    let blinded_digest = sender::blind(message.clone());
    signer.set_blinded_digest(blinded_digest.clone()).unwrap();

    let subset = signer.setup_subset();
    sender::set_subset(subset.clone());

    let mut signer = Signer::new_from_params(signer_privkey, signer_pubkey.clone(), judge_pubkey.clone(), id, blinded_digest, subset);

    let check_parameters = sender::generate_check_parameters();
    let is_valid = signer.check(check_parameters);
    assert!(is_valid);

    let blind_signature = signer.sign();
    let signature_str = sender::unblind(blind_signature);
    let signature: Signature = serde_json::from_str(&signature_str).unwrap();

    let encrypted_id = &signature.encrypted_id.v[0];
    let id_bytes = encrypted_id.as_bytes();
    let id_int = BigUint::from_bytes_le(id_bytes);

    //let msg = b"hoge";
    //let cipher = BigUint::from_bytes_le(msg);

    /*
    let plain_shares = judge_privkey
        .private_key_set
        .private_keys
        .iter()
        .map(|k| {
            let share = k.generate_share(id_int.clone());
            serde_json::to_string(&share).unwrap()
        })
        .collect();
        */
    let shares_txt = r#"{"s":[2736185836,3780265366,747965939,164405027,824585965,100371545,159905692,3567863780,3088278880,4264294466,1466124243,232804911,1023847685,3732027168,4139797804,3922721362,2229769211,3591565460,3761192236,3880602813,622705481,1220020424,137940314,1406537226,3679983013,3178766277,1513965873,1302057603,4052463896,164809866,1864955620,1334064686,409342180,523608517,774235155,1948160298,3282619528,1598764459,450619284,1678743909,279182303,1613182248,3639632595,2425019203,218838634,3178012727,2168514839,3976890044,3352119508,835767405,2502533932,3275109854,2882812339,2011859972,2785688665,778055398,110750505,1236182386,2298974222,3873899951,2370543534,3135497343,1555292754,2342793342],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[1289131381,798671321,472118971,2099541815,3728979562,2239984305,719495772,3841814724,2783509593,1359638510,2816354302,266307117,2420552899,1475180452,792806724,2683436170,2103625705,3815426059,571259112,4283372368,1926177559,1245028181,3294138463,3034560552,148280737,644233369,3076575136,1006147046,2858893882,1919180466,1995276314,2986253348,3268780757,3880794562,4272340471,2915692601,2578616293,1377543761,989799695,90959110,2126803892,2291958355,3835981179,1374635051,2254382608,3033968452,1032079543,824984411,559836898,2207428,53189462,1733244229,2660211190,3427164324,3597008852,1408587096,1386409768,3172888865,2368868582,2143988554,913437719,3857640225,1659045174,1892384367],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[1807551109,2577890350,1220739262,21081520,1900163586,3539622698,4084443426,605386627,2737388084,3497039787,4123846778,2412372142,2672235700,1904526296,909443356,2485131230,757848373,660327208,2137823109,1487968379,617678807,2416329360,1870949202,3547119188,2222083825,1528314669,2522121873,601591868,3884051769,1657021100,3978187241,3613975670,1257842001,1533709127,3114931302,1970618907,571804741,3930248728,3975604310,3684370784,64823309,2198588792,2187187829,1984292615,2377571076,1065191108,3225950676,2269743146,2941173513,907762007,3059668075,496899120,3677114894,2628762587,1259629228,4161679198,1574700674,4102192478,201770102,1349056440,4118857789,1771777198,3540361825,1675306874],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[3445635297,553870519,756626797,2933989096,167100629,12349338,825630597,2389702158,1746684373,771766136,4260975537,2255711837,3301551443,69213481,2511322326,1176335263,986190722,950912568,1417879386,1412206670,3958398571,2138575020,3917075703,650074547,925513666,3777661977,1022368808,2930635175,1057515675,97378331,3020447285,2334594129,2680487795,3334934438,1486692015,162677081,157859704,2387920145,1731418177,1840913341,4167994726,3471465008,4075212315,1142761033,2552222012,4180109549,2123421061,2169210798,3725859363,1414322248,3538047579,1230470088,12950647,2697086480,4144072847,1444288916,2924737155,906774483,1696452660,3421990607,3104266130,1668482477,1396253090,2756916705],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[4263862689,2216804007,2768808499,257906354,2303232257,2973611302,3896625978,1199765521,3355141881,31811089,3686222847,2279290706,170462938,1207198647,233669509,3953823940,1062012932,3656000660,2918694808,546676534,163536211,107087130,1991564330,2479553774,259501052,1763761665,1963328984,2395215975,265793162,1753926754,661891813,1442454851,2925478150,1368367656,109705275,2742296061,1601156652,3621082914,3774116814,824970121,51261467,3993033145,1146799008,2205766918,666921817,3895235287,2192570535,2545828255,3991589453,744929311,236058397,1314082207,2992372940,3034936318,727559695,3761843361,264386109,965961529,525047815,2930394938,3415659115,4101556220,855028453,1438718680],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[4244154605,249618145,44904765,2285199062,1605168315,3411553229,2583769054,2808075828,41572174,4004680573,1584788062,183069578,1167527151,3146182311,1885978098,2164494466,3348772016,3002368309,564514108,1472937912,1818868589,1580757798,2528874010,896545714,18549429,674574282,1403137916,3707140646,3935738192,63981233,1417182441,3085236196,4239515608,2285495754,4078575361,633435422,2689995109,474131534,2952191936,4183062816,2612575887,2051467582,3225656342,3410148200,1939150964,295556874,1729225056,971433800,2811516,2911541859,2315942251,323861332,3254073024,1708720816,2290391499,709518180,3642049819,834923857,455395210,2768900622,3289809858,561982890,3599089707,383862616],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[808714501,565296688,2576570719,3469523764,3075065718,2774701828,1124648642,3229149867,3553761,638188660,1829286014,3103066212,3464521641,1049603616,4253688146,2485975594,346740504,3082585636,1085478063,28575274,1311628291,427614970,1167590516,2770470325,93014798,3364469791,607740770,3748428334,2747793138,3292466402,785127333,156525220,1518144422,1405713090,3729337983,3687930250,3695579789,3931525546,508127867,2905967105,3294570529,3978082230,1465531191,3528128920,868812105,2771477213,2868389251,3131031514,987164170,1302446090,2375431351,424337204,3243143055,3267874407,1423467454,2392287034,4269794585,697782379,728210178,4195760387,3005391306,2647339709,2482292958,494347957],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[907705213,4146519341,1365214388,1566144120,3664856413,1108631977,2767232152,992036217,3374748796,3277981774,453056063,1890357248,4253759093,1374989012,2868190062,2530435674,1458132875,1899761835,1199743387,1427406655,2460091773,3714329053,3452019312,4011448329,2534633102,560857927,1826512421,842601454,3530903322,2044216522,1801754481,888788187,766568771,2135453280,111215959,1834966122,1655632561,1293648721,4196604363,506353077,2737596048,3080591508,2944346657,2014938776,3336541737,1858934890,1787019928,898483790,2684696491,1720668295,2697590189,1471618138,3262398099,2201095866,3364746713,3232513406,2964964328,3348839792,223164636,3613125914,3699254244,930088080,3631136337,2563698898],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[690964683,194870521,1977078920,1713199774,1734346486,2241986140,3035456837,2881227439,238793487,1718044363,1722117790,3043900836,723942199,3401168219,3555054505,3800993485,837535783,1344027222,2433496798,814764106,1168016655,4162708902,783818990,3111413980,2373063109,3682748556,2105439031,642788375,3020130275,2451187993,126494085,2478010437,2951691243,2859162006,1628890525,2115311298,3688644987,3624053987,127964525,460664420,3499942661,3646151698,2067049892,3067440613,7511738,2114546882,463794993,3710295390,1247154417,435632105,3630778182,2243324401,1342266649,3333389664,2258270077,2250976307,3672946679,3949969980,702400077,1637021779,676637207,55991165,3244003840,543378472],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}
    {"s":[3148225081,3728530845,1841079513,825725984,2166475559,853489139,1276386686,2357477404,1261058438,2746734677,2113859762,164122904,2731532147,3742214702,3310731564,485800812,2308894831,1311366789,1855933233,1134140501,3123502503,482225694,4215541426,2720662624,1818161701,3994349188,3780272271,268596054,3439491633,642065594,3200026117,2348513923,282015177,2043803320,399096154,820114626,416880240,4121562083,1718708374,4117955334,398001742,2415945822,3245970348,4128809431,2035487378,3976513187,2958242797,2238473375,3742222378,644128129,836267356,3109005286,351774499,439751650,1528667541,3265906857,925138335,3518875212,2446539125,1591766425,3245316762,732767199,1286181783,2687390818],"n":[17082307,191916878,367083801,2219161089,2954133611,3150869103,836996961,3349105413,184629209,3672158093,27094945,3970152171,624910049,1098510087,3027287070,2602309261,473974675,1474374704,4130802917,2855196303,4131834810,918900068,956875279,1851778715,2071630210,1985613156,2439966063,1618158344,1790863792,576411667,4136166223,4192397073,2262887041,3336789513,2554287770,10887970,1163476460,791369651,2677689373,357705882,1295652825,2619395449,3980977105,351981502,3894347452,264847709,3685583325,1343315963,2905284222,3241301124,1725382880,845630030,2401692780,1184830743,3997083842,3739715816,2011616828,3326742995,4108689968,3405889196,2164552481,1590100779,3956088473,2770482557]}"#;

    //let mut buf = String::new();
    //let mut plain_shares = Vec::new();

    let plain_shares = shares_txt.to_string().split('\n').map(|s| s.to_string()).collect();

    let result = verifyer::verify(signature_str.clone(), message, signer_pubkey, judge_pubkey);
    assert!(result);

    sender::destroy();

    let result = judge::open(plain_shares).unwrap();
    //let result_str = String::from_utf8_lossy(&result);
    println!("result: {:?}", result);

    assert_eq!(result, b"hogehoge");
    //assert_eq!(result, id_bytes);
}


/*
#[test]
#[ignore]
fn test_ready_params() {
    let pk1 = r#"-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxXo2zWkciUEZBcm/Exk8
Zac8NWskP59EAVFlO218xIXOV0FfphPB/tnbQh7GDXddo7XVEptHdHXyJlXXLihb
9vXbUZF2NDFLOhgDv7pa72VNLbw+jKR/FlsDtwv/bv7ZDqq+n79uavuJ8giX3qCf
+mtBmro7hG5AVve3JImhvA0FvTKJ0xCYUYw02st08He5RwFAXQK8G2cwahp+5ECH
MDdfFUaoxMfRN/+Hl9iqiJovKUJQ3545N2fDYdd0eqSlqL1N5xJxYX1GDMtGZgME
hHR6ntdfm7r43HDB4hk/MJIsNay6+K9tJBiz1qXG40G4NjMKzVrX9pi1Bv8G2RnP
/wIDAQAB
-----END PUBLIC KEY-----"#;

    let sk1 = r#"-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxXo2zWkciUEZBcm/Exk8Zac8NWskP59EAVFlO218xIXOV0Ff
phPB/tnbQh7GDXddo7XVEptHdHXyJlXXLihb9vXbUZF2NDFLOhgDv7pa72VNLbw+
jKR/FlsDtwv/bv7ZDqq+n79uavuJ8giX3qCf+mtBmro7hG5AVve3JImhvA0FvTKJ
0xCYUYw02st08He5RwFAXQK8G2cwahp+5ECHMDdfFUaoxMfRN/+Hl9iqiJovKUJQ
3545N2fDYdd0eqSlqL1N5xJxYX1GDMtGZgMEhHR6ntdfm7r43HDB4hk/MJIsNay6
+K9tJBiz1qXG40G4NjMKzVrX9pi1Bv8G2RnP/wIDAQABAoIBAC3nRMnmvw1gpnJj
/Rhxa0qt3x8Dsr9fRC2SQBfaUYBVIivCNHukaBnXhlIOWTdUId4mLEtQ8QEvUYR7
u7MtCoOTjtGdIH7tXnE4l9Z/eRfg0lnpQhjrO+d0bJ6mGVAxyT7RjdIQa5hOtDgg
qzzC1a0eNXfEBoW4IxiUKGxD2eaeL2NEuwdysO8MrxvbpPLrK4KaQwansh5EdrvL
QmWtSSuB2rYVwWbp7Rs+NuKS4w7CRm9Zp6kN6yjBum+x2o3Wdj33Ww0HayeaRZ1i
nmVTyphfajKuDLYUavCo4tBE67LK/VHesxeFNM+6PjONUVmcRnT1eoATeLVE4vOO
M9kFUQECgYEA9WD+s2HpETsXxyWPp2wv1G8b2kZq0h85Vb971PwgRciHkBccHFHR
0Hgc/hFTHg86V0iVBbcsWtTNTsNbH7aXGNvWJVQiMPDNdKmavgAl3tpGRP7iffLF
503he0GQmVaDEBH4LqCi4Ix0u7wnOND9ie8hMzxtC+2cZyLY8y13o78CgYEAzgZu
JPMgD2BvSKDJYlP7j4OKj0+mQIdpW+ONuLZsbtTDs5GiggTeeeyQDvlESUMSypMj
rmS/GUHAnYft27YWjk48vlzrvrnLyzWLalGYLsUigQIf2BRJG43j8iXuuBKciOrf
P8dkByYXatkiA57CJXOJGJLPvMOfkr+p3i2L48ECgYA9eY52HIqKoZZkczmZRVZ6
T1fYCJpMiDwSCoYYpw3izcmAxPlq8uiw5NbGpEqBlmkUYv/KzchT/UpueC0FNfaG
6NSux3RFdJ7UooU9IsZaHa9LK9xMl50TRQS/n359nBn71bSq4d3MigPY4NumtV0/
yGQ19OaQ/XeYszdNPU/i+wKBgQCXSbeGIJaRVBJD9fYL43nd+A0+kZGW3xjqJh5C
3oqflFOlQDNiYKryQ1nB9R9E4SEiaowQGuENbfBAfbmX1o2XsDIA5AElTBAvx8D5
sLMc3RwqOeIibTsGJdqWTW6P8vLJxBduIT/90+XsS0gj+me80quAxQYRKmG6hE37
3dxUwQKBgQC2onc1n35vGlZ2HxWdnPOUyRnA8HNVXcskprR07ZqFQu36LxI8hHvz
O+zc6JPZDWBppJDWot9d5HeNEjDBMcSqcpeXXYU8XvxA+uECLPctLgNMWxyKFx95
0sVQIY0n9eLL7sg5aCUpGKf4Qc88wF8OPYnBzjCeiJusjkGhQ5rqdQ==
-----END RSA PRIVATE KEY-----"#;

    let judge_pubkey = pk1.to_string();
    let judge_privkey = judge::divide_keys(sk1.to_string(), judge_pubkey.clone());

    let signer_pubkey = pk1.to_string();
    let signer_privkey = sk1.to_string();

    let message = "hoge".to_string();
    let id = 10;

    sender::new(signer_pubkey.clone(), judge_pubkey.clone(), 10);

    let ready_params = sender::generate_ready_parameters(message.clone(), judge_pubkey.clone());
    let blinded_digest = sender::blind(message.clone());

    let mut signer = Signer::new_with_blinded_digest(signer_privkey.clone(), signer_pubkey.clone(), ready_params, id);

    let subset = signer.setup_subset();
    sender::set_subset(subset.clone());

    let mut signer = Signer::new_from_params(signer_privkey, signer_pubkey.clone(), judge_pubkey.clone(), id, blinded_digest, subset);

    let check_parameters = sender::generate_check_parameters();
    let is_valid = signer.check(check_parameters);
    assert!(is_valid);

    let blind_signature = signer.sign();
    let signature = sender::unblind(blind_signature);

    let result = verifyer::verify(signature.clone(), message, signer_pubkey, judge_pubkey);
    assert!(result);

    sender::destroy();

    let result = judge::open(plain_shares);

    assert_eq!(result[0].as_bytes()[0], "1".as_bytes()[0]);
    assert_eq!(result[0].as_bytes()[1], "0".as_bytes()[0]);
}
*/